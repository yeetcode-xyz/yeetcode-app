name: Deploy FastAPI (auto, diff-aware)

on:
  push:
    paths:
      - 'scripts/fastapi/**'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: env

    steps:
      - name: Checkout code with history
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed FastAPI files
        id: get_changes
        run: |
          git diff --name-only HEAD~1 HEAD -- scripts/fastapi/ > changed.txt
          CHANGED=$(cat changed.txt | tr '\n' ',' | sed 's/,$//')
          echo "Changed files: $CHANGED"
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT

      - name: Stop if no FastAPI files changed
        if: steps.get_changes.outputs.changed_files == ''
        run: echo "‚úÖ No FastAPI files changed. Skipping deploy."

      - name: Create tarball of only changed files (flattened)
        if: steps.get_changes.outputs.changed_files != ''
        run: |
          mkdir -p changed-files
          while read file; do
            relative_path="${file#scripts/fastapi/}"
            mkdir -p "changed-files/$(dirname "$relative_path")"
            cp "$file" "changed-files/$relative_path"
          done < changed.txt
          tar -czf changed-files.tar.gz -C changed-files .

      - name: Set up SSH
        if: steps.get_changes.outputs.changed_files != ''
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Upload and deploy to VPS
        if: steps.get_changes.outputs.changed_files != ''
        run: |
          scp changed-files.tar.gz changed.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/root/
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd /root/yeetcode-api &&
            tar -xzf /root/changed-files.tar.gz -C . &&
            rm /root/changed-files.tar.gz &&

            # Install requirements if changed
            if grep -q 'requirements.txt' /root/changed.txt; then
              echo 'Installing updated requirements...'
              source .venv/bin/activate && pip install -r requirements.txt
            else
              echo 'No changes to requirements.txt'
            fi &&

            # Restart FastAPI
            pkill -f 'python3 main.py' || true &&
            nohup bash -c 'cd /root/yeetcode-api && source .venv/bin/activate && export $(cat .env | xargs) && python3 main.py' > /root/yeetcode-api/fastapi.log 2>&1 &
          "

      - name: Notify success on Discord
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          CHANGED_FILES: ${{ steps.get_changes.outputs.changed_files }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            if [ -z "$CHANGED_FILES" ]; then
              curl -H "Content-Type: application/json" \
                   -X POST \
                   -d '{"content": "üîï No FastAPI files changed. Deploy skipped."}' \
                   "$DISCORD_WEBHOOK"
            else
              curl -H "Content-Type: application/json" \
                   -X POST \
                   -d "{\"content\": \"‚úÖ FastAPI deployed with changed files:\n\`\`\`\n$CHANGED_FILES\n\`\`\`\"}" \
                   "$DISCORD_WEBHOOK"
            fi
          fi

      - name: Notify failure on Discord
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d '{"content": "‚ùå YeetCode FastAPI deploy failed."}' \
                 "$DISCORD_WEBHOOK"
          fi
