name: Deploy FastAPI (auto, diff-aware)

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/fastapi/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: env

    steps:
      - name: Checkout code (with history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Detect changed FastAPI files
        id: diff
        run: |
          git diff --name-only HEAD~1 HEAD -- scripts/fastapi/ > changed.txt
          CHANGED=$(grep -v '^$' changed.txt | tr '\n' ',' | sed 's/,$//')
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT

      - name: Skip if no FastAPI changes
        if: steps.diff.outputs.changed_files == ''
        run: echo "‚úÖ No FastAPI files changed. Skipping deploy."

      - name: Archive only changed files
        if: steps.diff.outputs.changed_files != ''
        run: |
          mkdir -p changed-files
          while read file; do
            rel="${file#scripts/fastapi/}"
            mkdir -p "changed-files/$(dirname "$rel")"
            cp "$file" "changed-files/$rel"
          done < changed.txt
          tar -czf changed-files.tgz -C changed-files .

      - name: Setup SSH
        if: steps.diff.outputs.changed_files != ''
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Upload & deploy on VPS
        if: steps.diff.outputs.changed_files != ''
        run: |
          scp changed-files.tgz changed.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/root/
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd /root/yeetcode-api

            # Unpack changed files into project root
            tar -xzf /root/changed-files.tgz -C . 
            rm /root/changed-files.tgz

            # Load .env
            set -a
            [ -f .env ] && . .env
            set +a

            # Reinstall if requirements.txt changed
            if grep -q '^requirements.txt$' /root/changed.txt; then
              echo "üì¶ requirements.txt changed; reinstalling..."
              source .venv/bin/activate
              pip install -r requirements.txt
            fi

            # Restart FastAPI
            pkill -f 'python3 main.py' || true
            source .venv/bin/activate
            nohup python3 main.py > fastapi.log 2>&1 &
          EOF

      - name: Notify success on Discord
        if: success()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          CHANGES: ${{ steps.diff.outputs.changed_files }}
        run: |
          if [ -z "$WEBHOOK" ]; then
            echo "üîï No Discord webhook set, skipping."
            exit 0
          fi
          if [ -z "$CHANGES" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d '{"content":"üîï No FastAPI files changed‚Äîdeploy skipped."}' \
              "$WEBHOOK"
          else
            ESCAPED=$(printf '%s' "$CHANGES" | sed 's/"/\\"/g')
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\":\"‚úÖ FastAPI deployed with changed files:\\n\`\`\`$ESCAPED\`\`\`\"}" \
              "$WEBHOOK"
          fi

      - name: Notify failure on Discord
        if: failure()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$WEBHOOK" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d '{"content":"‚ùå FastAPI deployment failed."}' \
              "$WEBHOOK"
          fi
