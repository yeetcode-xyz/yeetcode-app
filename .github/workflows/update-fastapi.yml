name: Deploy FastAPI (auto, diff-aware)

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/fastapi/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: env

    steps:
      # 1Ô∏è‚É£ Checkout with enough history for diff
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # 2Ô∏è‚É£ Figure out what changed
      - name: Detect FastAPI changes
        id: diff
        run: |
          git diff --name-only HEAD~1 HEAD -- scripts/fastapi/ > changed.txt
          CHANGED=$(grep -v '^$' changed.txt | tr '\n' ',' | sed 's/,$//')
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT

      # 3Ô∏è‚É£ Skip entirely if nothing changed
      - name: Skip if no changes
        if: steps.diff.outputs.changed_files == ''
        run: |
          echo "‚úÖ No FastAPI files changed; skipping deploy."

      # 4Ô∏è‚É£ Archive only the changed files (flatten paths)
      - name: Archive changed files
        if: steps.diff.outputs.changed_files != ''
        run: |
          mkdir -p changed-files
          while read file; do
            rel="${file#scripts/fastapi/}"
            mkdir -p "changed-files/$(dirname "$rel")"
            cp "$file" "changed-files/$rel"
          done < changed.txt
          tar -czf changed-files.tgz -C changed-files .

      # 5Ô∏è‚É£ Install SSH key and suppress banners
      - name: Setup SSH key & silence banner
        if: steps.diff.outputs.changed_files != ''
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          # add known host and disable MOTD on VPS
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_ed25519 -o BatchMode=yes -o StrictHostKeyChecking=no \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "touch ~/.hushlogin"

      # 6Ô∏è‚É£ Copy & deploy on the VPS
      - name: Deploy to VPS
        if: steps.diff.outputs.changed_files != ''
        run: |
          # copy archive and list
          scp -i ~/.ssh/id_ed25519 -q -o StrictHostKeyChecking=no \
            changed-files.tgz changed.txt \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/ 

          # SSH in quietly and run all deploy steps
          ssh -i ~/.ssh/id_ed25519 -q -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd ~/yeetcode-api

            # unpack files
            tar -xzf ~/changed-files.tgz -C .
            rm ~/changed-files.tgz

            # load env safely
            if [ -f .env ]; then
              export $(grep -v '^\s*#' .env | xargs)
            fi

            # reinstall if needed
            if grep -q '^requirements.txt$' ~/changed.txt; then
              echo "üì¶ requirements.txt changed; reinstalling..."
              source .venv/bin/activate
              pip install -r requirements.txt
            fi

            # restart the app
            pkill -f 'python3 main.py' || true
            source .venv/bin/activate
            nohup python3 main.py > fastapi.log 2>&1 &
          EOF

      # 7Ô∏è‚É£ Notify Discord on success
      - name: Discord ‚Üí success
        if: success()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          CHANGES: ${{ steps.diff.outputs.changed_files }}
        run: |
          [ -z "$WEBHOOK" ] && exit 0
          if [ -z "$CHANGES" ]; then
            CONTENT='üîï No FastAPI files changed‚Äîdeploy skipped.'
          else
            ESC=$(printf '%s' "$CHANGES" | sed 's/"/\\"/g')
            CONTENT="‚úÖ FastAPI deployed with changed files:\n\`\`\`\n$ESC\n\`\`\`"
          fi
          curl -s -X POST -H "Content-Type: application/json" \
               -d "{\"content\":\"$CONTENT\"}" \
               "$WEBHOOK"

      # 8Ô∏è‚É£ Notify Discord on failure
      - name: Discord ‚Üí failure
        if: failure()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          [ -z "$WEBHOOK" ] && exit 0
          curl -s -X POST -H "Content-Type: application/json" \
               -d '{"content":"‚ùå FastAPI deploy failed."}' \
               "$WEBHOOK"
